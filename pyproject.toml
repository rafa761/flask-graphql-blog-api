[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "flask-graphql-blog-api"
version = "1.0.0"
description = "Flask blog API with graphql"
readme = "README.md"
authors = [
    { name = "Rafael Ferreira", email = "rafaelferreira761@gmail.com" }
]
requires-python = ">=3.10"

# Core dependencies
dependencies = [
    "flask>=3.1.1",
]

# Development dependencies
[project.optional-dependencies]
dev = [
    # Code quality
    "ruff>=0.12.0",

    # Development tools
    "pre-commit>=4.2.0",
]

[project.urls]
Repository = "https://github.com/rafa761/flask-graphql-blog-api"

# ========================================
# RUFF - Linting and Formatting
# ========================================
[tool.ruff]
line-length = 88
target-version = "py313"

exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "migrations",
    "venv",
    ".pytest_cache",
]

[tool.ruff.lint]
# Essential rules for clean code
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "UP",   # pyupgrade
    "B",    # flake8-bugbear (catches real bugs)
]

ignore = [
    "E501",   # Line too long (handled by formatter)
]

# Auto-fix what we can
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
# Migrations are generated code
"migrations/*" = ["ALL"]

# Scripts can be more flexible
"scripts/*" = ["E402", "T20"]

[tool.ruff.lint.isort]
known-first-party = ["src", "app"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

# ========================================
# MYPY - Type Checking
# ========================================
[tool.mypy]
python_version = "3.13"
strict = true
pretty = true

mypy_path = "src"
packages = ["src"]

exclude = [
    "migrations/",
    "venv/",
    ".venv/",
]

# ========================================
# PYTEST - Testing
# ========================================
[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

addopts = [
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "-v",
]

# ========================================
# SETUPTOOLS
# ========================================
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"
